devtools::load_all(".")
iris %>%
determine_distinct(everything())
iris %>%
confirm_distinct(everything())
iris %>%
confirm_distinct()
devtools::load_all(".")
iris %>%
confirm_distinct()
iris %>%
diagnose_numeric()
iris %>%
diagnose_numeric(1:2)
.data %>%
framecleaner::select_otherwise(..., otherwise = where(is.numeric), return_type = "df") -> df
devtools::load_all(".")
iris %>%
diagnose_numeric(1:2)
2 =< 3
2 <= 3
iris %>%
diagnose_numeric(1:2)
tibble::tibble(a = c(NA, 1, 0. -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
devtools::load_all(".")
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
presenter::format_percent
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
presenter::format_percent
# install.packages("devtools")
devtools::install_github("Harrison4192/presenter")
devtools::load_all(".")
devtools::load_all(".")
iris %>%
diagnose_numeric(1:2)
devtools::load_all(".")
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
library(presenter)
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3))
framecleaner::filter_missing
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric() %>%
View
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric() %>%
format_number(min)
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric() %>%
format_number(min, digits = 2)
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric() %>%
format_number(min, digits = 2) %>% View
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
devtools::load_all(".")
tibble::tibble(a = c(NA, 1, 0, -3), b = c(Inf, -1, 0, 3)) %>%
diagnose_numeric()
iris %>%
diagnose_category
devtools::load_all(".")
iris %>%
diagnose_category
iris %>%
diagnose
devtools::document()
#### Option 1: nevergrad installation via PIP
# 1. load reticulate
library("reticulate")
#### Option 1: nevergrad installation via PIP
# 1. load reticulate
library(pacman)
p_load("reticulate")
# 2. create virtual environment
virtualenv_create("r-reticulate")
# 3. use the environment created
use_virtualenv("r-reticulate", required = TRUE)
# 4. point Python path to the python file in the virtual environment. Below is
#    an example for MacOS M1 or above. The "~" is my home dir "/Users/gufengzhou".
#    Show hidden files in case you want to locate the file yourself.
Sys.setenv(RETICULATE_PYTHON = "~/.virtualenvs/r-reticulate/bin/python")
# 5. Check python path
py_config() # If the first path is not as 4, do 6
# 6. Restart R session, run #4 first, then load library("reticulate"), check
#    py_config() again, python should have path as in #4.
#    If you see: "NOTE: Python version was forced by RETICULATE_PYTHON_FALLBACK"
#    if you're using RStudio, go to Global Options > Python, and uncheck the
#    box for "Automatically activate project-local Python environments".
# 7. Install numpy if py_config shows it's not available
py_install("numpy", pip = TRUE)
# 8. Install nevergrad
py_install("nevergrad", pip = TRUE)
p_load(fs)
p_load(Robyn)
